----TRIGGERS-----
/*
	FOR:MIENTRAS SE EJECUTA.
	BEFORE: ANTES.
	AFTER: DESPUES.
	INSTEAD OF: EN VEZ DE.
	INSERT - UPDATE - DELETE
*/

--Los triggers se guardan dentro de la tabla

CREATE TRIGGER tr_ejemplo
ON sales
FOR UPDATE AS
PRINT 'SE MODIFICO LA TABLA SALES'

UPDATE sales SET qty = qty + 1 WHERE stor_id='6380'

GO

CREATE TRIGGER tr_sales_update
ON sales
AFTER UPDATE AS
BEGIN
	PRINT 'SE MODIFICO LA TABLA SALES, AFTER.'
END

GO
--En lugar de hacer el update se ejecuta lo que esta dentro del begin
CREATE TRIGGER tr_sales_update2
ON sales
INSTEAD OF UPDATE AS
BEGIN
	PRINT 'SE MODIFICO LA TABLA SALES, EN VEZ DE.'
END

UPDATE sales SET qty = qty + 1 WHERE stor_id='6380'

SELECT * FROM SALES

/*
	EJERCICIO 1:CUANDO SE VAYA A ACTUALIZAR UN AUTOR SE DEBE VERIFICAR QUE SI LA LETRA DE SU
				CIUDAD TERMINA EN "O", CREAR UN TRIGGER QUE CUENTE AUTOMATICAMENTE SI
				EL LARGO DEL NOMBRE DE LA CIUDAD ES MENOR A 10 LA CIUDAD SE VA A CAMBIAR A "SANTIAGO",
				SI LA CIUDAD ES MAYOR A 10 SE VA A CAMBIAR A "LOS VICHOS"

	EJERCICIO 2: SE NECESITA BLOQUEAR EL INGRESO DE DATOS A LA TABLA AUTORES, CUANDO VAYAN A INSERTAR
					SE MOSTRARA UN MENSAJE DE QUE NO SE PUEDE GUARDAR INFORMACION EN LA TABLA.
	
				CUANDO SE QUIERA ELIMINAR EN LA TABLA DE UN AUTOR VAN A HACER
				UN HISTORIAL, OSEA EL AUTOR ELIMINADO SE GUARDA EN UNA TABLA "HistorialAutor" 
*/

GO

CREATE TRIGGER tr_update_ciudad
ON authors
FOR UPDATE AS
	DECLARE @largo INT, @ciudad VARCHAR(255)
	BEGIN
		DECLARE CursorLargo CURSOR SCROLL
			FOR	SELECT @largo=LEN(city),@ciudad=city FROM authors WHERE RIGHT(city,1)='o'
		 
		 PRINT @largo
		IF @largo < 10
			UPDATE authors SET city = 'SANTIAGO' WHERE RIGHT(city,1)='o'
		IF @largo > 10
			UPDATE authors SET city= 'LOS VICHOS' WHERE RIGHT(city,1)='o'
	END
GO

UPDATE authors SET city='o' WHERE RIGHT(city,1)='o'

CREATE TRIGGER tr_eliminar_autor
ON authors
FOR UPDATE AS
	

GO

SELECT city,LEN(city) FROM authors WHERE RIGHT(city,1)='o'

